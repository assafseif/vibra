spring.application.name=music-catalog-service
server.port = 8081

# Datasource configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/musiccatalogdb
spring.datasource.username=postgres
spring.datasource.password=mysecretpassword
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA (Hibernate) configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql= true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Swagger UI Configuration
springdoc.api-docs.path=/auth/v3/api-docs
springdoc.swagger-ui.path=/auth/swagger-ui.html

# Server configuration
server.servlet.context-path=/music



# application.properties
management.endpoints.web.exposure.include=beans
management.endpoints.web.exposure.include=info,health,beans
management.endpoints.web.exposure.include=*
management.endpoint.beans.enabled=true



spring.messages.basename=messages/messages


#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=music-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8085


# spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8085

# management.metrics.distribution.percentiles-histogram.http.server.requests=true
# management.observations.key-values.application=music-catalog-service
# management.tracing.sampling.probability=1.0